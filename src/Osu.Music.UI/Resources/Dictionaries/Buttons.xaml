<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="PlayerButtonBase" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{DynamicResource MaterialIcons}"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.1"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayerToggleButtonBase" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{DynamicResource MaterialIcons}"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.1"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.15"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayerButtonPrevious" TargetType="{x:Type Button}" BasedOn="{StaticResource PlayerButtonBase}">
        <Setter Property="Content" Value="&#xe045;"/>
    </Style>

    <Style x:Key="PlayerButtonNext" TargetType="{x:Type Button}" BasedOn="{StaticResource PlayerButtonBase}">
        <Setter Property="Content" Value="&#xe044;"/>
    </Style>
    
    <Style x:Key="PlayerButtonStop" TargetType="{x:Type Button}" BasedOn="{StaticResource PlayerButtonBase}">
        <Setter Property="Content" Value="&#xe047;"/>
    </Style>

    <Style x:Key="PlayerButtonPause" TargetType="{x:Type Button}" BasedOn="{StaticResource PlayerButtonBase}">
        <Setter Property="Content" Value="&#xe034;"/>
    </Style>
    
    <Style x:Key="PlayerButtonPlay" TargetType="{x:Type Button}" BasedOn="{StaticResource PlayerButtonBase}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="Content" Value="&#xe037;"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayerToggleButtonVolume" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource PlayerToggleButtonBase}">
        <Setter Property="Content" Value="&#xe050;"/>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.1"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="Transparent"/>
                </MultiTrigger.Setters>
            </MultiTrigger>


            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="&#xe04f;"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PlayerToggleButtonShuffle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource PlayerToggleButtonBase}">
        <Setter Property="Content" Value="&#xe043;"/>
    </Style>

    <Style x:Key="PlayerToggleButtonRandom" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource PlayerToggleButtonBase}">
        <Setter Property="Content" Value="&#xe028;"/>
    </Style>

    <Style x:Key="SidebarButtonBase" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidColorBrushMain}"/>
        <Setter Property="FontFamily" Value="{DynamicResource MaterialIcons}"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.1"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SidebarToggleButtonBase" TargetType="{x:Type ToggleButton}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SolidColorBrushMain}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Roboto}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Bd" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0 0 0 0" Padding="5 0 0 0">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource SolidColorBrushMain}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource SolidColorBrushMain}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="5 0 0 0"/>
                            <Setter TargetName="Bd" Property="Padding" Value="0 0 0 0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.1"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Black" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SidebarButtonOsu" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource SolidColorBrushMain}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="13 0 0 0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0 0 0 0" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <!--<TextBlock x:Name="Logo" FontFamily="{DynamicResource MaterialIconsOutlined}" FontSize="19" Text="&#xe039;" Margin="0 0 3 0" VerticalAlignment="Center"/>-->
                    <TextBlock Text="osu.Music" VerticalAlignment="Center"/>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SidebarButtonAllSongs" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SidebarToggleButtonBase}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <TextBlock FontFamily="{DynamicResource MaterialIconsOutlined}" FontSize="24" Text="&#xe3a1;" Margin="5 0 10 0" VerticalAlignment="Center"/>
                    <TextBlock Text="ALL SONGS" VerticalAlignment="Center"/>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SidebarButtonCollection" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SidebarToggleButtonBase}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <TextBlock FontFamily="{DynamicResource MaterialIconsOutlined}" FontSize="24" Text="&#xe030;" Margin="5 0 10 0" VerticalAlignment="Center"/>
                    <TextBlock Text="COLLECTIONS" VerticalAlignment="Center"/>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidebarButtonPlaylists" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource SidebarToggleButtonBase}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <TextBlock FontFamily="{DynamicResource MaterialIconsOutlined}" FontSize="24" Text="&#xe03d;" Margin="5 0 10 0" VerticalAlignment="Center"/>
                    <TextBlock Text="PLAYLISTS" VerticalAlignment="Center"/>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#e5e5e5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#cacacb" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#e81123" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#f1707a" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarGitHub" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="46" Height="32" StrokeThickness="0.629426" Fill="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                    <Path.Data>
                        <PathGeometry Figures="M 22.999128 5 C 17.337421 5 12.747 9.5904199 12.747 15.253387 c 0 4.529994 2.937543 8.372656 7.01183 9.729073 0.512984 0.09378 0.699925 -0.222816 0.699925 -0.494729 0 -0.242962 -0.0088 -0.888125 -0.01393 -1.743518 -2.851927 0.619357 -3.453661 -1.374672 -3.453661 -1.374672 -0.466406 -1.183955 -1.138636 -1.499297 -1.138636 -1.499297 -0.930924 -0.636353 0.0705 -0.623764 0.0705 -0.623764 1.029116 0.07301 1.570424 1.056811 1.570424 1.056811 0.91456 1.566647 2.40001 1.114088 2.984119 0.852245 0.09315 -0.662788 0.357516 -1.114717 0.650829 -1.370895 -2.276642 -0.258696 -4.670358 -1.138636 -4.670358 -5.067527 0 -1.119123 0.399687 -2.034313 1.055553 -2.75123 -0.105751 -0.259326 -0.457595 -1.301659 0.100076 -2.7134651 0 0 0.861058 -0.2756909 2.81984 1.0511431 0.817626 -0.227222 1.695049 -0.3411491 2.566809 -0.3449261 0.870497 0.0037 1.747921 0.1177021 2.566806 0.3449261 1.957523 -1.326834 2.816692 -1.0511431 2.816692 -1.0511431 0.559563 1.4118061 0.207713 2.4541391 0.101967 2.7134651 0.657125 0.716917 1.054293 1.632107 1.054293 2.75123 0 3.938961 -2.397493 4.805685 -4.681687 5.059345 0.368215 0.316602 0.696147 0.942252 0.696147 1.898984 0 1.370267 -0.01266 2.476172 -0.01266 2.812288 0 0.274429 0.184425 0.593549 0.70496 0.49347 C 30.317975 23.622265 33.253 19.782124 33.253 15.253387 33.252995 9.5904199 28.661945 5 22.998978 5" FillRule="EvenOdd"/>
                    </Path.Data>
                </Path>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarMinimize" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="46" Height="32" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarMaximize" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarRestore" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarClose" TargetType="Button" BasedOn="{StaticResource TitleBarCloseButtonStyle}">
        <Setter Property="Content">
            <Setter.Value>
                <Path Width="46" Height="32" Data="M 18,11 27,20 M 18,20 27,11" 
                      Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                      StrokeThickness="1" />
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>