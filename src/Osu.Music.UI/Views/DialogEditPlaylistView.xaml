<UserControl x:Class="Osu.Music.UI.Views.DialogEditPlaylistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Osu.Music.UI.Views"
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validators="clr-namespace:Osu.Music.UI.Resources.Validators"
             xmlns:utility="clr-namespace:Osu.Music.UI.Utility"
             xmlns:proxy="clr-namespace:Osu.Music.UI.Utility.Proxies"
             mc:Ignorable="d" Height="450"
             Width="450" MinWidth="450" MaxWidth="450">
    <UserControl.Resources>
        <proxy:DialogEditPlaylistProxy x:Key="proxy" Data="{Binding}"/>
    </UserControl.Resources>
    <Grid Margin="16">
        <StackPanel>
            <TextBlock>Edit Playlist</TextBlock>
            <TextBox Margin="0 6 0 0" FontSize="18"
                     materialDesign:HintAssist.Hint="Name" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     utility:ValidationBehaviour.HasError="{Binding NameHasError}">
                <TextBox.Text>
                    <Binding Path="Playlist.Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            <validators:UniqueNameValidationRule ValidatesOnTargetUpdated="True">
                                <validators:UniqueNameValidationRule.Parameters>
                                    <validators:UniqueNameValidationParameters Items="{Binding Data.Playlists, Source={StaticResource proxy}}"
                                                                               Item="{Binding Data.Playlist, Source={StaticResource proxy}}"/>
                                </validators:UniqueNameValidationRule.Parameters>
                            </validators:UniqueNameValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Grid Margin="0 24 0 0" Height="262">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <Expander HorizontalAlignment="Stretch" Header="Background" IsExpanded="{Binding BackgroundExpanded}"
                              materialDesign:ExpanderAssist.HorizontalHeaderPadding="0,2,24,2">
                        <StackPanel Orientation="Vertical" TextBlock.Foreground="{DynamicResource MaterialDesignBody}" Margin="0,8,24,16">
                            <materialDesign:ColorPicker Color="{Binding Playlist.Cover.BackgroundColor, Converter={StaticResource ColorStringConverter}}" Height="150"/>
                        </StackPanel>
                    </Expander>
                    <Expander HorizontalAlignment="Stretch" Header="Icon" IsExpanded="{Binding IconExpanded}"
                              materialDesign:ExpanderAssist.HorizontalHeaderPadding="0,2,24,2">
                        <StackPanel Orientation="Vertical" TextBlock.Foreground="{DynamicResource MaterialDesignBody}" Margin="0,8,24,16">
                            <ComboBox materialDesign:HintAssist.Hint="Icon" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                      FontSize="18"
                                      ItemsSource="{Binding Icons}"
                                      SelectedItem="{Binding Playlist.Cover.Icon}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type materialDesign:PackIconKind}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="30"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <materialDesign:PackIcon Kind="{Binding Path=.}" HorizontalAlignment="Left"/>
                                            <TextBlock Grid.Column="1" Text="{Binding Path=., Converter={StaticResource PackIconKindToStringConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <materialDesign:ColorPicker Color="{Binding Playlist.Cover.IconColor, Converter={StaticResource ColorStringConverter}}" Height="150" Margin="0 6 0 0"/>
                        </StackPanel>
                    </Expander>
                </StackPanel>
                <Grid Grid.Column="1" VerticalAlignment="Top" Margin="10 0 5 5">
                    <Rectangle Width="130" Height="122" RadiusX="15" RadiusY="15" 
                               Fill="{Binding Playlist.Cover.BackgroundColor, Converter={StaticResource BrushStringConverter}}"/>
                    <materialDesign:PackIcon HorizontalAlignment="Center" VerticalAlignment="Center" Width="80" Height="80"
                                             Foreground="{Binding Playlist.Cover.IconColor, Converter={StaticResource BrushStringConverter}}"
                                             Kind="{Binding Playlist.Cover.Icon, Mode=OneWay}">
                    </materialDesign:PackIcon>
                </Grid>
            </Grid>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2"
                    Margin="0 16 0 0">
                <Button IsDefault="True" Style="{StaticResource MaterialDesignFlatButton}"
                    Command="{Binding ConfirmCommand}" Cursor="Hand">
                    SAVE
                </Button>
                <Button IsCancel="True" Margin="8 0 0 0" Style="{StaticResource MaterialDesignFlatButton}"
                    Command="{Binding CancelCommand}" Cursor="Hand">
                    CANCEL
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
