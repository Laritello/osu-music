<UserControl x:Class="Osu.Music.UI.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Osu.Music.UI.Views"
             xmlns:controls="clr-namespace:Osu.Music.UI.UserControls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="900">
    <UserControl.Resources>
        <ControlTemplate x:Key="PopupTemplate">
            <Border Background="{DynamicResource SolidColorBrushMain}" BorderBrush="Transparent" Padding="0" BorderThickness="0" HorizontalAlignment="Left">
                <StackPanel Orientation="Vertical">
                    <Button Style="{DynamicResource PopupButton}" Content="About" Command="{Binding OpenPageCommand}" CommandParameter="{Binding Model.AboutPage}"/>
                    <Button Style="{DynamicResource PopupButton}" Content="Settings" Command="{Binding OpenPageCommand}" CommandParameter="{Binding Model.SettingsPage}"/>
                    <Button Style="{DynamicResource PopupButton}" Content="Exit" Command="{Binding ExitCommand}"/>
                </StackPanel>
            </Border>
        </ControlTemplate>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <!--TitleBar-->
        <Grid Grid.ColumnSpan="2" Panel.ZIndex="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ContentControl Margin="13 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Grid>
                    <Button Style="{DynamicResource SidebarButtonOsu}" Command="{Binding ChangePopupStateCommand}" CommandParameter="{Binding ElementName=MenuPopup}"/>
                    <Popup x:Name="MenuPopup" StaysOpen="False" Placement="Left" HorizontalOffset="-100" VerticalOffset="30">
                        <ContentControl Template="{StaticResource PopupTemplate}"/>
                    </Popup>
                </Grid>
            </ContentControl>
            <StackPanel Grid.Column="1"  HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Style="{StaticResource TitleBarGitHub}" Command="{Binding OpenGitHubCommand}"/>
                <Button Style="{StaticResource TitleBarMinimize}" Command="{Binding MinimizeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                <Button x:Name="MaximizeButton" Style="{StaticResource TitleBarMaximize}" Command="{Binding MaximizeOrRestoreCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=MaximizeButton}"/>
                <Button x:Name="RestoreButton" Style="{StaticResource TitleBarRestore}" Command="{Binding MaximizeOrRestoreCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=MaximizeButton}"
                        Visibility="{Binding Path=Visibility, ElementName=MaximizeButton, Converter={StaticResource ReverseVisibilityConverter}, FallbackValue=Collapsed}"/>
                <Button Style="{StaticResource TitleBarClose}" Command="{Binding CloseCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
            </StackPanel>
        </Grid>
        
        <Grid Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="250"/>
            </Grid.RowDefinitions>
            <Image Source="pack://application:,,,/Osu.Music.UI;component/Resources/Images/sidebar-background.png" 
                   Grid.RowSpan="2"  Stretch="UniformToFill" HorizontalAlignment="Center"/>
            <Rectangle Fill="{DynamicResource SolidColorBrushMain}" Opacity="0.2" Grid.RowSpan="2"/>

            <StackPanel Orientation="Vertical" Margin="0 50 0 0">
                <ToggleButton Style="{DynamicResource SidebarButtonAllSongs}" IsChecked="True" Command="{Binding OpenPageCommand}" CommandParameter="{Binding Model.SongsPage}"/>
                <ToggleButton Style="{DynamicResource SidebarButtonCollection}" IsEnabled="False"/>
                <ToggleButton Style="{DynamicResource SidebarButtonPlaylists}" IsEnabled="False"/>
            </StackPanel>

            <ContentPresenter x:Name="contentPresenter" Grid.Row="1" Content="{Binding Visualization.Content}"/>
        </Grid>

        <ContentControl Content="{Binding SelectedPage}" Grid.Column="1" Grid.Row="1"/>
        <controls:BeatmapProgressBar Grid.Row="2" Grid.ColumnSpan="2" Total="{Binding Model.TotalTime}" Current="{Binding Model.CurrentTime}" Progress="{Binding Model.Progress}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ProgressChanged">
                    <prism:InvokeCommandAction Command="{Binding ScrollBeatmapCommand}"
                                               TriggerParameterPath="Progress" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </controls:BeatmapProgressBar>
        <Grid Grid.Row="3" Grid.ColumnSpan="2" Background="{DynamicResource SolidColorBrushMain}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="350"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" VerticalAlignment="Center" Orientation="Horizontal" Margin="5 0 0 0">
                <StackPanel Orientation="Vertical">
                    <TextBlock Style="{DynamicResource PlayerBeatmapTitle}" Text="{Binding Model.PlayingBeatmap.Title}"/>
                    <TextBlock Style="{DynamicResource PlayerBeatmapArtist}" Text="{Binding Model.PlayingBeatmap.Artist}"/>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="1" VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Style="{DynamicResource PlayerButtonPrevious}" Command="{Binding PreviousBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonStop}" Command="{Binding StopBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonPlay}" Command="{Binding PlayBeatmapCommand}" CommandParameter="{Binding Model.SelectedBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonPause}" Command="{Binding PauseBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
                <Button Style="{DynamicResource PlayerButtonNext}" Command="{Binding NextBeatmapCommand}" CommandParameter="{Binding Model.PlayingBeatmap}"/>
            </StackPanel>
            <StackPanel Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0 0 5 0">
                <ToggleButton Style="{DynamicResource PlayerToggleButtonVolume}" Command="{Binding MuteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                              IsChecked="{Binding Playback.Mute}"/>
                <Slider Style="{DynamicResource VolumeSlider}" Minimum="0" Maximum="1" Value="{Binding Playback.Volume}" Margin="0 0 5 0"/>
                <ToggleButton Style="{DynamicResource PlayerToggleButtonShuffle}" IsChecked="{Binding Random}"/>
                <ToggleButton Style="{DynamicResource PlayerToggleButtonRandom}" IsChecked="{Binding Repeat}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
